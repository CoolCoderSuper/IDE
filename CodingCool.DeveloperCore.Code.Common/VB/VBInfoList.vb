Namespace VB

    Public Class VBInfoList

        Public Shared Function GetKeywords() As IEnumerable(Of VBKeyword)
            Return New List(Of VBKeyword) From {
                New VBKeyword("addhandler"),
                New VBKeyword("andalso"),
                New VBKeyword("addressof"),
                New VBKeyword("alias"),
                New VBKeyword("and"),
                New VBKeyword("as"),
                New VBKeyword("boolean"),
                New VBKeyword("byref"),
                New VBKeyword("byte"),
                New VBKeyword("byval"),
                New VBKeyword("call"),
                New VBKeyword("catch"),
                New VBKeyword("cbool"),
                New VBKeyword("cbyte"),
                New VBKeyword("cchar"),
                New VBKeyword("cdate"),
                New VBKeyword("cdbl"),
                New VBKeyword("cdec"),
                New VBKeyword("char"),
                New VBKeyword("cint"),
                New VBKeyword("class"),
                New VBKeyword("clng"),
                New VBKeyword("cobj"),
                New VBKeyword("const"),
                New VBKeyword("continue"),
                New VBKeyword("csbyte"),
                New VBKeyword("cuint"),
                New VBKeyword("culng"),
                New VBKeyword("cushort"),
                New VBKeyword("date"),
                New VBKeyword("decimal"),
                New VBKeyword("declare"),
                New VBKeyword("default"),
                New VBKeyword("delegate"),
                New VBKeyword("dim"),
                New VBKeyword("directcast"),
                New VBKeyword("do"),
                New VBKeyword("double"),
                New VBKeyword("each"),
                New VBKeyword("else"),
                New VBKeyword("elseif"),
                New VBKeyword("end"),
                New VBKeyword("enum"),
                New VBKeyword("erase"),
                New VBKeyword("error"),
                New VBKeyword("event"),
                New VBKeyword("exit"),
                New VBKeyword("false"),
                New VBKeyword("finally"),
                New VBKeyword("friend"),
                New VBKeyword("function"),
                New VBKeyword("get"),
                New VBKeyword("gettype"),
                New VBKeyword("getxmlnamespace"),
                New VBKeyword("global"),
                New VBKeyword("goto"),
                New VBKeyword("handles"),
                New VBKeyword("if"),
                New VBKeyword("implements"),
                New VBKeyword("imports"),
                New VBKeyword("in"),
                New VBKeyword("inherits"),
                New VBKeyword("integer"),
                New VBKeyword("interface"),
                New VBKeyword("is"),
                New VBKeyword("isnot"),
                New VBKeyword("let"),
                New VBKeyword("lib"),
                New VBKeyword("like"),
                New VBKeyword("long"),
                New VBKeyword("loop"),
                New VBKeyword("me"),
                New VBKeyword("mod"),
                New VBKeyword("module"),
                New VBKeyword("mustinherit"),
                New VBKeyword("mustoverride"),
                New VBKeyword("mybase"),
                New VBKeyword("myclass"),
                New VBKeyword("nameof"),
                New VBKeyword("namespace"),
                New VBKeyword("narrowing"),
                New VBKeyword("new"),
                New VBKeyword("next"),
                New VBKeyword("not"),
                New VBKeyword("nothing"),
                New VBKeyword("notinheritable"),
                New VBKeyword("notoverridable"),
                New VBKeyword("object"),
                New VBKeyword("of"),
                New VBKeyword("on"),
                New VBKeyword("operator"),
                New VBKeyword("option"),
                New VBKeyword("optional"),
                New VBKeyword("or"),
                New VBKeyword("overrides"),
                New VBKeyword("paramarray"),
                New VBKeyword("partial"),
                New VBKeyword("private"),
                New VBKeyword("property"),
                New VBKeyword("protected"),
                New VBKeyword("public"),
                New VBKeyword("raiseevent"),
                New VBKeyword("readonly"),
                New VBKeyword("redim"),
                New VBKeyword("removehandler"),
                New VBKeyword("resume"),
                New VBKeyword("return"),
                New VBKeyword("sbyte"),
                New VBKeyword("select"),
                New VBKeyword("set"),
                New VBKeyword("shadows"),
                New VBKeyword("shared"),
                New VBKeyword("short"),
                New VBKeyword("single"),
                New VBKeyword("static"),
                New VBKeyword("step"),
                New VBKeyword("stop"),
                New VBKeyword("string"),
                New VBKeyword("structure"),
                New VBKeyword("sub"),
                New VBKeyword("synclock"),
                New VBKeyword("then"),
                New VBKeyword("throw"),
                New VBKeyword("to"),
                New VBKeyword("true"),
                New VBKeyword("try"),
                New VBKeyword("trycast"),
                New VBKeyword("typeof"),
                New VBKeyword("uinteger"),
                New VBKeyword("ulong"),
                New VBKeyword("ushort"),
                New VBKeyword("using"),
                New VBKeyword("when"),
                New VBKeyword("while"),
                New VBKeyword("widening"),
                New VBKeyword("with"),
                New VBKeyword("withevents"),
                New VBKeyword("writeonly"),
                New VBKeyword("xor"),
                New VBKeyword("for"),
                New VBKeyword("aggregate"),
                New VBKeyword("ansi"),
                New VBKeyword("assembly"),
                New VBKeyword("async"),
                New VBKeyword("auto"),
                New VBKeyword("await"),
                New VBKeyword("binary"),
                New VBKeyword("compare"),
                New VBKeyword("custom"),
                New VBKeyword("distinct"),
                New VBKeyword("equals"),
                New VBKeyword("explicit"),
                New VBKeyword("from"),
                New VBKeyword("into"),
                New VBKeyword("isfalse"),
                New VBKeyword("istrue"),
                New VBKeyword("iterator"),
                New VBKeyword("join"),
                New VBKeyword("key"),
                New VBKeyword("mid"),
                New VBKeyword("off"),
                New VBKeyword("preserve"),
                New VBKeyword("skip"),
                New VBKeyword("strict"),
                New VBKeyword("take"),
                New VBKeyword("text"),
                New VBKeyword("unicode"),
                New VBKeyword("until"),
                New VBKeyword("where"),
                New VBKeyword("yield")
            }
        End Function

        Public Shared Function GetGroups() As IEnumerable(Of VBCodeGroup)
            Return New List(Of VBCodeGroup) From {
                New VBCodeGroup("class", "end class", True, True, VBSymbolType.Class),'public symbols
                New VBCodeGroup("interface", "end interface", True, True, VBSymbolType.Interface),
                New VBCodeGroup("structure", "end structure", True, True, VBSymbolType.Structure),
                New VBCodeGroup("sub", "end sub", True, True, VBSymbolType.Sub),
                New VBCodeGroup("function", "end function", True, True, VBSymbolType.Function),
                New VBCodeGroup("namespace", "end namespace", True, True, VBSymbolType.Namespace),
                New VBCodeGroup("property", "end property", True, True, VBSymbolType.Property),
                New VBCodeGroup("event", "end event", True, True, VBSymbolType.Event),
                New VBCodeGroup("#region", "#end region", True, True, VBSymbolType.Region),
                New VBCodeGroup("if", "end if", True, True, VBSymbolType.Region),'private symbols
                New VBCodeGroup("""", """", False, False, VBSymbolType.String),'other symbols
                New VBCodeGroup("""", """c", False, False, VBSymbolType.Char)
            }
        End Function

    End Class

End Namespace